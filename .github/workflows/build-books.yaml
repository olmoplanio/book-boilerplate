name: Build Books

on:
  push:
    branches: [ main, master ]
    paths:
      - 'content/**'
      - 'devops/**'
      - 'templates/**'
      - 'resources/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'content/**'
      - 'devops/**'
      - 'templates/**'
      - 'resources/**'
  workflow_dispatch:
    inputs:
      volume:
        description: 'Build specific volume (e.g., volume-001)'
        required: false
        type: string

jobs:
  build-books:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyyaml
        # Install additional dependencies if requirements.txt exists
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Install Pandoc
      run: |
        sudo apt-get update
        sudo apt-get install -y pandoc
    
    - name: Install LibreOffice
      run: |
        sudo apt-get install -y libreoffice
    
    - name: Verify installation
      run: |
        python --version
        pandoc --version
        libreoffice --version

    - name: Register TTF fonts system-wide
      run: |
        mkdir -p ~/.fonts
        mkdir -p /usr/share/fonts/truetype/custom
        cp ${{ github.workspace }}/resources/fonts/*.ttf ~/.fonts/
        sudo cp ${{ github.workspace }}/resources/fonts/*.ttf /usr/share/fonts/truetype/custom/
        fc-cache -f -v
        fc-list : family | grep -i egy || true        
    
    - name: Create necessary directories
      run: |
        mkdir -p obj/unicode
        mkdir -p obj/custom
        mkdir -p build
    
    - name: Build books (all volumes)
      if: ${{ github.event.inputs.volume == '' }}
      run: |
        python devops/build_books.py volumes.yaml styles.yaml basic.nam
      working-directory: ${{ github.workspace }}
        
    - name: List generated files
      run: |
        echo "=== Generated Files ==="
        if [ -d "build" ]; then
          echo "Build directory contents:"
          ls -la build/
        else
          echo "Build directory not found"
        fi
        
        if [ -d "obj" ]; then
          echo "Intermediate files:"
          find obj -type f -name "*.md" | head -10
        fi
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: book-artifacts
        path: |
          build/*.pdf
          build/*.odt
        retention-days: 30
    
    - name: Upload intermediate files (for debugging)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: debug-artifacts
        path: |
          obj/**/*.md
        retention-days: 7
    
    - name: Commit and push built files
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add build files to git
        git add build/
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Auto-build: Update generated books [skip ci]"
          git push
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}